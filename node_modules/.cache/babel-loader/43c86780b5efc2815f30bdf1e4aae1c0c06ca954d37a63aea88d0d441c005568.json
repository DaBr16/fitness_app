{"ast":null,"code":"import { createAction, createReducer, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"../axiosURL.js\";\nexport const loadExercises = createAsyncThunk(\"fitness/loadExercises\", async () => {\n  const res = await axios.get(\"/fitness/exercise/\", {\n    withCredential: true\n  });\n  return res.data;\n});\nexport const updateExercise = createAction(\"fitness/updateExercise\");\nexport const createExercise = createAction(\"fitness/createExercise\");\nconst initialState = {\n  exercise: []\n};\nconst exerciseReducer = createReducer(initialState, builder => {\n  builder.addCase(loadExercises.fulfilled, (state, action) => {\n    return {\n      ...state,\n      exercise: action.payload\n    };\n  }).addCase(createExercise, (state, action) => {\n    const exerciseCopy = [...state.exercise];\n    const newExercise = {\n      name: action.payload.name,\n      baseTime: action.payload.baseTime,\n      energyBurned: action.payload.energyBurned\n    };\n    exerciseCopy.push(newExercise);\n    return {\n      ...state,\n      exercise: exerciseCopy\n    };\n  }).addCase(updateExercise, (state, action) => {\n    const exerciseIndex = state.exercise.findIndex(t => t._id === action.payload.exerciseId);\n    const exerciseCopy = {\n      ...state.exercise[exerciseIndex]\n    };\n    const {\n      exerciseId,\n      ...rest\n    } = action.payload;\n    Object.assign(exerciseCopy, rest);\n    const exerciseArrayCopy = [...state.exercise];\n    exerciseArrayCopy[exerciseIndex] = exerciseCopy;\n    return {\n      ...state,\n      exercise: exerciseArrayCopy\n    };\n  });\n});\nexport default exerciseReducer;","map":{"version":3,"names":["createAction","createReducer","createAsyncThunk","axios","loadExercises","res","get","withCredential","data","updateExercise","createExercise","initialState","exercise","exerciseReducer","builder","addCase","fulfilled","state","action","payload","exerciseCopy","newExercise","name","baseTime","energyBurned","push","exerciseIndex","findIndex","t","_id","exerciseId","rest","Object","assign","exerciseArrayCopy"],"sources":["/home/brezerda/Projects/Repos/fitness_app/src/Reducer/exercise.reducer.js"],"sourcesContent":["import {createAction, createReducer, createAsyncThunk} from \"@reduxjs/toolkit\";\nimport axios from \"../axiosURL.js\";\n\nexport const loadExercises = createAsyncThunk(\"fitness/loadExercises\", async () => {\n    const res = await axios.get(\"/fitness/exercise/\", {withCredential: true})\n    return res.data\n});\n\nexport const updateExercise = createAction(\"fitness/updateExercise\")\nexport const createExercise = createAction(\"fitness/createExercise\")\n\nconst initialState = {\n    exercise: []\n};\n\nconst exerciseReducer = createReducer(initialState, (builder) => {\n    builder.addCase(loadExercises.fulfilled, (state, action) => {\n        return{\n            ...state,\n            exercise: action.payload\n        }\n    })\n    .addCase(createExercise, (state, action) => {\n        const exerciseCopy = [...state.exercise]\n        const newExercise = {\n            name: action.payload.name, \n            baseTime: action.payload.baseTime,\n            energyBurned: action.payload.energyBurned \n        }\n        exerciseCopy.push(newExercise)\n        return {\n            ...state,\n            exercise: exerciseCopy\n        }\n    })\n    .addCase(updateExercise, (state, action) => {\n        const exerciseIndex = state.exercise.findIndex(t => t._id === action.payload.exerciseId)\n        const exerciseCopy = {...state.exercise[exerciseIndex]}\n        const { exerciseId, ...rest } = action.payload;\n        Object.assign(exerciseCopy, rest);\n        const exerciseArrayCopy = [...state.exercise]\n        exerciseArrayCopy[exerciseIndex] = exerciseCopy\n        return{\n            ...state,\n            exercise: exerciseArrayCopy \n        }\n    })\n});\n\nexport default exerciseReducer;"],"mappings":"AAAA,SAAQA,YAAY,EAAEC,aAAa,EAAEC,gBAAgB,QAAO,kBAAkB;AAC9E,OAAOC,KAAK,MAAM,gBAAgB;AAElC,OAAO,MAAMC,aAAa,GAAGF,gBAAgB,CAAC,uBAAuB,EAAE,YAAY;EAC/E,MAAMG,GAAG,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,oBAAoB,EAAE;IAACC,cAAc,EAAE;EAAI,CAAC,CAAC;EACzE,OAAOF,GAAG,CAACG,IAAI;AACnB,CAAC,CAAC;AAEF,OAAO,MAAMC,cAAc,GAAGT,YAAY,CAAC,wBAAwB,CAAC;AACpE,OAAO,MAAMU,cAAc,GAAGV,YAAY,CAAC,wBAAwB,CAAC;AAEpE,MAAMW,YAAY,GAAG;EACjBC,QAAQ,EAAE;AACd,CAAC;AAED,MAAMC,eAAe,GAAGZ,aAAa,CAACU,YAAY,EAAGG,OAAO,IAAK;EAC7DA,OAAO,CAACC,OAAO,CAACX,aAAa,CAACY,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;IACxD,OAAM;MACF,GAAGD,KAAK;MACRL,QAAQ,EAAEM,MAAM,CAACC;IACrB,CAAC;EACL,CAAC,CAAC,CACDJ,OAAO,CAACL,cAAc,EAAE,CAACO,KAAK,EAAEC,MAAM,KAAK;IACxC,MAAME,YAAY,GAAG,CAAC,GAAGH,KAAK,CAACL,QAAQ,CAAC;IACxC,MAAMS,WAAW,GAAG;MAChBC,IAAI,EAAEJ,MAAM,CAACC,OAAO,CAACG,IAAI;MACzBC,QAAQ,EAAEL,MAAM,CAACC,OAAO,CAACI,QAAQ;MACjCC,YAAY,EAAEN,MAAM,CAACC,OAAO,CAACK;IACjC,CAAC;IACDJ,YAAY,CAACK,IAAI,CAACJ,WAAW,CAAC;IAC9B,OAAO;MACH,GAAGJ,KAAK;MACRL,QAAQ,EAAEQ;IACd,CAAC;EACL,CAAC,CAAC,CACDL,OAAO,CAACN,cAAc,EAAE,CAACQ,KAAK,EAAEC,MAAM,KAAK;IACxC,MAAMQ,aAAa,GAAGT,KAAK,CAACL,QAAQ,CAACe,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAKX,MAAM,CAACC,OAAO,CAACW,UAAU,CAAC;IACxF,MAAMV,YAAY,GAAG;MAAC,GAAGH,KAAK,CAACL,QAAQ,CAACc,aAAa;IAAC,CAAC;IACvD,MAAM;MAAEI,UAAU;MAAE,GAAGC;IAAK,CAAC,GAAGb,MAAM,CAACC,OAAO;IAC9Ca,MAAM,CAACC,MAAM,CAACb,YAAY,EAAEW,IAAI,CAAC;IACjC,MAAMG,iBAAiB,GAAG,CAAC,GAAGjB,KAAK,CAACL,QAAQ,CAAC;IAC7CsB,iBAAiB,CAACR,aAAa,CAAC,GAAGN,YAAY;IAC/C,OAAM;MACF,GAAGH,KAAK;MACRL,QAAQ,EAAEsB;IACd,CAAC;EACL,CAAC,CAAC;AACN,CAAC,CAAC;AAEF,eAAerB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}