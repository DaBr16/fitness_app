{"ast":null,"code":"var _jsxFileName = \"/home/brezerda/Projects/Repos/fitness_app/src/Food/food.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./food.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Food = () => {\n  _s();\n  const food = [{\n    \"name\": \"Apple\",\n    \"baseAmount\": 1,\n    \"energy\": 52,\n    \"fat\": 0.2,\n    \"carbohydrates\": 14,\n    \"protein\": 0.3,\n    \"salt\": 0,\n    \"fiber\": 2.4,\n    \"drink\": false\n  }, {\n    \"name\": \"Potatoes\",\n    \"baseAmount\": 100,\n    \"energy\": 77,\n    \"fat\": 0.1,\n    \"carbohydrates\": 17,\n    \"protein\": 2,\n    \"salt\": 0,\n    \"fiber\": 2.2,\n    \"drink\": false\n  }, {\n    \"name\": \"Rice\",\n    \"baseAmount\": 100,\n    \"energy\": 130,\n    \"fat\": 0.3,\n    \"carbohydrates\": 28,\n    \"protein\": 2.7,\n    \"salt\": 0,\n    \"fiber\": 0.4,\n    \"drink\": false\n  }, {\n    \"name\": \"Salmon\",\n    \"baseAmount\": 100,\n    \"energy\": 206,\n    \"fat\": 13.4,\n    \"carbohydrates\": 0,\n    \"protein\": 22,\n    \"salt\": 0.05,\n    \"fiber\": 0,\n    \"drink\": false\n  }, {\n    \"name\": \"Chicken\",\n    \"baseAmount\": 100,\n    \"energy\": 165,\n    \"fat\": 9.3,\n    \"carbohydrates\": 0,\n    \"protein\": 19,\n    \"salt\": 0.1,\n    \"fiber\": 0,\n    \"drink\": false\n  }];\n  const newFood = {\n    \"name\": \"\",\n    \"baseAmount\": 0,\n    \"energy\": 0,\n    \"fat\": 0,\n    \"carbohydrates\": 0,\n    \"protein\": 0,\n    \"salt\": 0,\n    \"fiber\": 0,\n    \"drink\": false\n  };\n  const initialSelectedFood = food[0];\n  const [selectedFood, setSelectedFood] = useState(initialSelectedFood);\n  const handleFoodClick = index => {\n    // Toggle selection when a row is clicked\n    setSelectedFood(prevSelectedFood => prevSelectedFood === food[index] ? null : food[index]);\n  };\n  const handleAttributeChange = (attribute, value) => {\n    // Update the selected food's attribute when an input field is changed\n    setSelectedFood(prevSelectedFood => ({\n      ...prevSelectedFood,\n      [attribute]: value\n    }));\n  };\n  const handleNewFood = () => {\n    setSelectedFood(newFood);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Food__Container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNewFood,\n      children: \"Neues Essen hinzuf\\xFCgen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Food__Table__Container\",\n      children: food.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleFoodClick(index),\n        className: `Food__TableRow ${selectedFood.name === item.name ? \"selected\" : \"\"}`,\n        children: item.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Food__SelectedFood__Container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Food__SelectedFood__Attributes\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: Object.keys(selectedFood).map((attribute, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [attribute, \": \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: selectedFood[attribute],\n              onChange: e => handleAttributeChange(attribute, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Food, \"DECBVAmsXaMK9cKH2WQvAMcd3Bg=\");\n_c = Food;\nexport default Food;\nvar _c;\n$RefreshReg$(_c, \"Food\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Food","_s","food","newFood","initialSelectedFood","selectedFood","setSelectedFood","handleFoodClick","index","prevSelectedFood","handleAttributeChange","attribute","value","handleNewFood","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","item","name","Object","keys","type","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/brezerda/Projects/Repos/fitness_app/src/Food/food.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./food.css\";\n\nconst Food = () => {\n\n    const food = [\n      {\"name\": \"Apple\", \"baseAmount\": 1, \"energy\": 52, \"fat\": 0.2, \"carbohydrates\": 14, \"protein\": 0.3, \"salt\": 0, \"fiber\": 2.4, \"drink\": false},\n      {\"name\": \"Potatoes\", \"baseAmount\": 100, \"energy\": 77, \"fat\": 0.1, \"carbohydrates\": 17, \"protein\": 2, \"salt\": 0, \"fiber\": 2.2, \"drink\": false},\n      {\"name\": \"Rice\", \"baseAmount\": 100, \"energy\": 130, \"fat\": 0.3, \"carbohydrates\": 28, \"protein\": 2.7, \"salt\": 0, \"fiber\": 0.4, \"drink\": false},\n      {\"name\": \"Salmon\", \"baseAmount\": 100, \"energy\": 206, \"fat\": 13.4, \"carbohydrates\": 0, \"protein\": 22, \"salt\": 0.05, \"fiber\": 0, \"drink\": false},\n      {\"name\": \"Chicken\", \"baseAmount\": 100, \"energy\": 165, \"fat\": 9.3, \"carbohydrates\": 0, \"protein\": 19, \"salt\": 0.1, \"fiber\": 0, \"drink\": false}\n    ]\n\n    const newFood = { \"name\": \"\", \"baseAmount\": 0, \"energy\": 0, \"fat\": 0, \"carbohydrates\": 0, \"protein\": 0, \"salt\": 0, \"fiber\": 0, \"drink\": false };\n\n    const initialSelectedFood = food[0];\n\n    const [selectedFood, setSelectedFood] = useState(initialSelectedFood);\n\n    const handleFoodClick = (index) => {\n        // Toggle selection when a row is clicked\n        setSelectedFood(prevSelectedFood => (\n            prevSelectedFood === food[index] ? null : food[index]\n        ));\n    };\n\n    const handleAttributeChange = (attribute, value) => {\n        // Update the selected food's attribute when an input field is changed\n        setSelectedFood((prevSelectedFood) => ({\n            ...prevSelectedFood,\n            [attribute]: value\n        }));\n    };\n\n    const handleNewFood = () => {\n        setSelectedFood(newFood);\n    }\n\n    return (\n        <div className=\"Food__Container\">\n            <button onClick={handleNewFood}>Neues Essen hinzuf√ºgen</button>\n            <div className=\"Food__Table__Container\">\n                {food.map((item, index) => (\n                    <div key={index} onClick={() => handleFoodClick(index)} className={`Food__TableRow ${selectedFood.name === item.name ? \"selected\" : \"\"}`}>\n                        {item.name}\n                    </div>\n                ))}\n            </div>\n            <div className=\"Food__SelectedFood__Container\">\n                <div className=\"Food__SelectedFood__Attributes\">\n                    <form>\n                        {Object.keys(selectedFood).map((attribute, index) => (\n                            <div key={index}>\n                                <strong>{attribute}: </strong>\n                                <input\n                                    type=\"text\"\n                                    value={selectedFood[attribute]}\n                                    onChange={(e) => handleAttributeChange(attribute, e.target.value)}\n                                />\n                            </div>\n                        ))}\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Food;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}