{"ast":null,"code":"import { createAction, createReducer, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"../axiosURL.js\";\nexport const loadProfiles = createAsyncThunk(\"fitness/loadProfiles\", async () => {\n  const res = await axios.get(\"/fitness/profiles\", {\n    withCredential: true\n  });\n  return res.data;\n});\nexport const updateProfile = createAction(\"fitness/updateProfile\");\nexport const createProfile = createAction(\"fitness/createProfile\");\nconst initialState = {\n  profile: []\n};\nconst profileReducer = createReducer(initialState, builder => {\n  builder.addCase(loadProfiles.fulfilled, (state, action) => {\n    return {\n      ...state,\n      profile: action.payload\n    };\n  }).addCase(createProfile, (state, action) => {\n    const profileCopy = [...state.profile];\n    const newProfile = {\n      name: action.payload.name,\n      age: action.payload.age,\n      height: action.payload.height,\n      weight: action.payload.weight,\n      sex: action.payload.sex,\n      userId: action.payload.userId\n    };\n    profileCopy.push(newProfile);\n    return {\n      ...state,\n      profile: profileCopy\n    };\n  }).addCase(updateProfile, (state, action) => {\n    const profileIndex = state.profile.findIndex(t => t._id === action.payload.profileId);\n    const profileCopy = {\n      ...state.profile[profileIndex]\n    };\n    const {\n      profileId,\n      ...rest\n    } = action.payload;\n    Object.assign(profileCopy, rest);\n    const profileArrayCopy = [...state.profile];\n    profileArrayCopy[profileIndex] = profileCopy;\n    return {\n      ...state,\n      profile: profileArrayCopy\n    };\n  });\n});\nexport default profileReducer;","map":{"version":3,"names":["createAction","createReducer","createAsyncThunk","axios","loadProfiles","res","get","withCredential","data","updateProfile","createProfile","initialState","profile","profileReducer","builder","addCase","fulfilled","state","action","payload","profileCopy","newProfile","name","age","height","weight","sex","userId","push","profileIndex","findIndex","t","_id","profileId","rest","Object","assign","profileArrayCopy"],"sources":["/home/brezerda/Projects/Repos/fitness_app/src/Reducer/exercise.reducer.js"],"sourcesContent":["import {createAction, createReducer, createAsyncThunk} from \"@reduxjs/toolkit\";\nimport axios from \"../axiosURL.js\";\n\nexport const loadProfiles = createAsyncThunk(\"fitness/loadProfiles\", async () => {\n    const res = await axios.get(\"/fitness/profiles\", {withCredential: true})\n    return res.data\n});\n\nexport const updateProfile = createAction(\"fitness/updateProfile\")\nexport const createProfile = createAction(\"fitness/createProfile\")\n\nconst initialState = {\n    profile: []\n};\n\nconst profileReducer = createReducer(initialState, (builder) => {\n    builder.addCase(loadProfiles.fulfilled, (state, action) => {\n        return{\n            ...state,\n            profile: action.payload\n        }\n    })\n    .addCase(createProfile, (state, action) => {\n        const profileCopy = [...state.profile]\n        const newProfile = {\n            name: action.payload.name, \n            age: action.payload.age,\n            height: action.payload.height,\n            weight: action.payload.weight,\n            sex: action.payload.sex,\n            userId: action.payload.userId\n        }\n        profileCopy.push(newProfile)\n        return {\n            ...state,\n            profile: profileCopy\n        }\n    })\n    .addCase(updateProfile, (state, action) => {\n        const profileIndex = state.profile.findIndex(t => t._id === action.payload.profileId)\n        const profileCopy = {...state.profile[profileIndex]}\n        const { profileId, ...rest } = action.payload;\n        Object.assign(profileCopy, rest);\n        const profileArrayCopy = [...state.profile]\n        profileArrayCopy[profileIndex] = profileCopy\n        return{\n            ...state,\n            profile: profileArrayCopy \n        }\n    })\n});\n\nexport default profileReducer;"],"mappings":"AAAA,SAAQA,YAAY,EAAEC,aAAa,EAAEC,gBAAgB,QAAO,kBAAkB;AAC9E,OAAOC,KAAK,MAAM,gBAAgB;AAElC,OAAO,MAAMC,YAAY,GAAGF,gBAAgB,CAAC,sBAAsB,EAAE,YAAY;EAC7E,MAAMG,GAAG,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,mBAAmB,EAAE;IAACC,cAAc,EAAE;EAAI,CAAC,CAAC;EACxE,OAAOF,GAAG,CAACG,IAAI;AACnB,CAAC,CAAC;AAEF,OAAO,MAAMC,aAAa,GAAGT,YAAY,CAAC,uBAAuB,CAAC;AAClE,OAAO,MAAMU,aAAa,GAAGV,YAAY,CAAC,uBAAuB,CAAC;AAElE,MAAMW,YAAY,GAAG;EACjBC,OAAO,EAAE;AACb,CAAC;AAED,MAAMC,cAAc,GAAGZ,aAAa,CAACU,YAAY,EAAGG,OAAO,IAAK;EAC5DA,OAAO,CAACC,OAAO,CAACX,YAAY,CAACY,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;IACvD,OAAM;MACF,GAAGD,KAAK;MACRL,OAAO,EAAEM,MAAM,CAACC;IACpB,CAAC;EACL,CAAC,CAAC,CACDJ,OAAO,CAACL,aAAa,EAAE,CAACO,KAAK,EAAEC,MAAM,KAAK;IACvC,MAAME,WAAW,GAAG,CAAC,GAAGH,KAAK,CAACL,OAAO,CAAC;IACtC,MAAMS,UAAU,GAAG;MACfC,IAAI,EAAEJ,MAAM,CAACC,OAAO,CAACG,IAAI;MACzBC,GAAG,EAAEL,MAAM,CAACC,OAAO,CAACI,GAAG;MACvBC,MAAM,EAAEN,MAAM,CAACC,OAAO,CAACK,MAAM;MAC7BC,MAAM,EAAEP,MAAM,CAACC,OAAO,CAACM,MAAM;MAC7BC,GAAG,EAAER,MAAM,CAACC,OAAO,CAACO,GAAG;MACvBC,MAAM,EAAET,MAAM,CAACC,OAAO,CAACQ;IAC3B,CAAC;IACDP,WAAW,CAACQ,IAAI,CAACP,UAAU,CAAC;IAC5B,OAAO;MACH,GAAGJ,KAAK;MACRL,OAAO,EAAEQ;IACb,CAAC;EACL,CAAC,CAAC,CACDL,OAAO,CAACN,aAAa,EAAE,CAACQ,KAAK,EAAEC,MAAM,KAAK;IACvC,MAAMW,YAAY,GAAGZ,KAAK,CAACL,OAAO,CAACkB,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAKd,MAAM,CAACC,OAAO,CAACc,SAAS,CAAC;IACrF,MAAMb,WAAW,GAAG;MAAC,GAAGH,KAAK,CAACL,OAAO,CAACiB,YAAY;IAAC,CAAC;IACpD,MAAM;MAAEI,SAAS;MAAE,GAAGC;IAAK,CAAC,GAAGhB,MAAM,CAACC,OAAO;IAC7CgB,MAAM,CAACC,MAAM,CAAChB,WAAW,EAAEc,IAAI,CAAC;IAChC,MAAMG,gBAAgB,GAAG,CAAC,GAAGpB,KAAK,CAACL,OAAO,CAAC;IAC3CyB,gBAAgB,CAACR,YAAY,CAAC,GAAGT,WAAW;IAC5C,OAAM;MACF,GAAGH,KAAK;MACRL,OAAO,EAAEyB;IACb,CAAC;EACL,CAAC,CAAC;AACN,CAAC,CAAC;AAEF,eAAexB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}