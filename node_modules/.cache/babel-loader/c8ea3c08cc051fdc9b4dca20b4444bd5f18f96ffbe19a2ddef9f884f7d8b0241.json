{"ast":null,"code":"import { createAction, createReducer, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"../axiosURL.js\";\nexport const loadFoods = createAsyncThunk(\"fitness/loadFoods\", async () => {\n  const res = axios.get(\"fitenss/food\", {\n    withCredential: true\n  });\n  return res.data;\n});\nexport const updateFood = createAction(\"fitness/updateFood\");\nconst initialState = {\n  foods: []\n};\nconst foodReducer = createReducer(initialState, builder => {\n  builder.addCase(loadFoods.fulfilled, (state, action) => {\n    return {\n      ...state,\n      foods: action.payload\n    };\n  }).addCase(createFood, (state, action) => {\n    const foodIndex = state.foods.findIndex(t => t._id === action.payload._id);\n    const foodCopy = {\n      ...state.foods[foodIndex]\n    };\n    const foodsArrayCopy = [...state.foods];\n    foodsArrayCopy[foodIndex] = foodCopy;\n    return {\n      ...state,\n      foods: foodsArrayCopy\n    };\n  });\n});\nexport default foodReducer;","map":{"version":3,"names":["createAction","createReducer","createAsyncThunk","axios","loadFoods","res","get","withCredential","data","updateFood","initialState","foods","foodReducer","builder","addCase","fulfilled","state","action","payload","createFood","foodIndex","findIndex","t","_id","foodCopy","foodsArrayCopy"],"sources":["/home/brezerda/Projects/Repos/fitness_app/src/Reducer/foodReducer.js"],"sourcesContent":["import {createAction, createReducer, createAsyncThunk} from \"@reduxjs/toolkit\";\nimport axios from \"../axiosURL.js\";\n\nexport const loadFoods = createAsyncThunk(\"fitness/loadFoods\", async () => {\n    const res = axios.get(\"fitenss/food\", {withCredential: true})\n    return res.data\n});\n\nexport const updateFood = createAction(\"fitness/updateFood\")\n\nconst initialState = {\n    foods: []\n};\n\nconst foodReducer = createReducer(initialState, (builder) => {\n    builder.addCase(loadFoods.fulfilled, (state, action) => {\n        return{\n            ...state,\n            foods: action.payload\n        }\n    })\n    .addCase(createFood, (state, action) => {\n        const foodIndex = state.foods.findIndex(t => t._id === action.payload._id)\n        const foodCopy = {...state.foods[foodIndex]}\n        const foodsArrayCopy = [...state.foods]\n        foodsArrayCopy[foodIndex] = foodCopy\n\n        return{\n            ...state,\n            foods: foodsArrayCopy\n        }\n    })\n});\n\nexport default foodReducer;"],"mappings":"AAAA,SAAQA,YAAY,EAAEC,aAAa,EAAEC,gBAAgB,QAAO,kBAAkB;AAC9E,OAAOC,KAAK,MAAM,gBAAgB;AAElC,OAAO,MAAMC,SAAS,GAAGF,gBAAgB,CAAC,mBAAmB,EAAE,YAAY;EACvE,MAAMG,GAAG,GAAGF,KAAK,CAACG,GAAG,CAAC,cAAc,EAAE;IAACC,cAAc,EAAE;EAAI,CAAC,CAAC;EAC7D,OAAOF,GAAG,CAACG,IAAI;AACnB,CAAC,CAAC;AAEF,OAAO,MAAMC,UAAU,GAAGT,YAAY,CAAC,oBAAoB,CAAC;AAE5D,MAAMU,YAAY,GAAG;EACjBC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,WAAW,GAAGX,aAAa,CAACS,YAAY,EAAGG,OAAO,IAAK;EACzDA,OAAO,CAACC,OAAO,CAACV,SAAS,CAACW,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;IACpD,OAAM;MACF,GAAGD,KAAK;MACRL,KAAK,EAAEM,MAAM,CAACC;IAClB,CAAC;EACL,CAAC,CAAC,CACDJ,OAAO,CAACK,UAAU,EAAE,CAACH,KAAK,EAAEC,MAAM,KAAK;IACpC,MAAMG,SAAS,GAAGJ,KAAK,CAACL,KAAK,CAACU,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAKN,MAAM,CAACC,OAAO,CAACK,GAAG,CAAC;IAC1E,MAAMC,QAAQ,GAAG;MAAC,GAAGR,KAAK,CAACL,KAAK,CAACS,SAAS;IAAC,CAAC;IAC5C,MAAMK,cAAc,GAAG,CAAC,GAAGT,KAAK,CAACL,KAAK,CAAC;IACvCc,cAAc,CAACL,SAAS,CAAC,GAAGI,QAAQ;IAEpC,OAAM;MACF,GAAGR,KAAK;MACRL,KAAK,EAAEc;IACX,CAAC;EACL,CAAC,CAAC;AACN,CAAC,CAAC;AAEF,eAAeb,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}