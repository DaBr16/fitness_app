{"ast":null,"code":"import { createAction, createReducer, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"../axiosURL.js\";\nexport const loadFoods = createAsyncThunk(\"fitness/loadFoods\", async () => {\n  const res = axios.get(\"/fitness/food\", {\n    withCredential: true\n  });\n  console.log(\"Foods:\", res.date);\n  return res.data;\n});\nexport const updateFood = createAction(\"fitness/updateFood\");\nexport const createFood = createAction(\"fitness/createFood\");\nconst initialState = {\n  foods: []\n};\nconst foodReducer = createReducer(initialState, builder => {\n  builder.addCase(loadFoods.fulfilled, (state, action) => {\n    return {\n      ...state,\n      foods: action.payload\n    };\n  }).addCase(createFood, (state, action) => {\n    const foodCopy = [...state.foods];\n    const newFood = {\n      name: action.payload.name,\n      baseAmount: action.payload.baseAmount,\n      energy: action.payload.energy,\n      fat: action.payload.fat,\n      carbohydrates: action.payload.carbohydrates,\n      protein: action.payload.protein,\n      salt: action.payload.salt,\n      fiber: action.payload.fiber,\n      drink: action.payload.drink\n    };\n    foodCopy.push(newFood);\n    return {\n      ...state,\n      foods: foodCopy\n    };\n  }).addCase(updateFood, (state, action) => {\n    const foodIndex = state.foods.findIndex(t => t._id === action.payload._id);\n    const foodCopy = {\n      ...state.foods[foodIndex]\n    };\n    const foodsArrayCopy = [...state.foods];\n    foodsArrayCopy[foodIndex] = foodCopy;\n    return {\n      ...state,\n      foods: foodsArrayCopy\n    };\n  });\n});\nexport default foodReducer;","map":{"version":3,"names":["createAction","createReducer","createAsyncThunk","axios","loadFoods","res","get","withCredential","console","log","date","data","updateFood","createFood","initialState","foods","foodReducer","builder","addCase","fulfilled","state","action","payload","foodCopy","newFood","name","baseAmount","energy","fat","carbohydrates","protein","salt","fiber","drink","push","foodIndex","findIndex","t","_id","foodsArrayCopy"],"sources":["/home/brezerda/Projects/Repos/fitness_app/src/Reducer/foodReducer.js"],"sourcesContent":["import {createAction, createReducer, createAsyncThunk} from \"@reduxjs/toolkit\";\nimport axios from \"../axiosURL.js\";\n\nexport const loadFoods = createAsyncThunk(\"fitness/loadFoods\", async () => {\n    const res = axios.get(\"/fitness/food\", {withCredential: true})\n    console.log(\"Foods:\", res.date);\n    return res.data\n});\n\nexport const updateFood = createAction(\"fitness/updateFood\")\nexport const createFood = createAction(\"fitness/createFood\")\n\nconst initialState = {\n    foods: []\n};\n\nconst foodReducer = createReducer(initialState, (builder) => {\n    builder.addCase(loadFoods.fulfilled, (state, action) => {\n        return{\n            ...state,\n            foods: action.payload\n        }\n    })\n    .addCase(createFood, (state, action) => {\n        const foodCopy = [...state.foods]\n        const newFood = {\n            name: action.payload.name, \n            baseAmount: action.payload.baseAmount, \n            energy: action.payload.energy,\n            fat: action.payload.fat,\n            carbohydrates: action.payload.carbohydrates,\n            protein: action.payload.protein,\n            salt: action.payload.salt,\n            fiber: action.payload.fiber,\n            drink: action.payload.drink\n        }\n\n        foodCopy.push(newFood)\n        return {\n            ...state,\n            foods: foodCopy\n        }\n    })\n    .addCase(updateFood, (state, action) => {\n        const foodIndex = state.foods.findIndex(t => t._id === action.payload._id)\n        const foodCopy = {...state.foods[foodIndex]}\n        const foodsArrayCopy = [...state.foods]\n        foodsArrayCopy[foodIndex] = foodCopy\n\n        return{\n            ...state,\n            foods: foodsArrayCopy\n        }\n    })\n});\n\nexport default foodReducer;"],"mappings":"AAAA,SAAQA,YAAY,EAAEC,aAAa,EAAEC,gBAAgB,QAAO,kBAAkB;AAC9E,OAAOC,KAAK,MAAM,gBAAgB;AAElC,OAAO,MAAMC,SAAS,GAAGF,gBAAgB,CAAC,mBAAmB,EAAE,YAAY;EACvE,MAAMG,GAAG,GAAGF,KAAK,CAACG,GAAG,CAAC,eAAe,EAAE;IAACC,cAAc,EAAE;EAAI,CAAC,CAAC;EAC9DC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEJ,GAAG,CAACK,IAAI,CAAC;EAC/B,OAAOL,GAAG,CAACM,IAAI;AACnB,CAAC,CAAC;AAEF,OAAO,MAAMC,UAAU,GAAGZ,YAAY,CAAC,oBAAoB,CAAC;AAC5D,OAAO,MAAMa,UAAU,GAAGb,YAAY,CAAC,oBAAoB,CAAC;AAE5D,MAAMc,YAAY,GAAG;EACjBC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,WAAW,GAAGf,aAAa,CAACa,YAAY,EAAGG,OAAO,IAAK;EACzDA,OAAO,CAACC,OAAO,CAACd,SAAS,CAACe,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;IACpD,OAAM;MACF,GAAGD,KAAK;MACRL,KAAK,EAAEM,MAAM,CAACC;IAClB,CAAC;EACL,CAAC,CAAC,CACDJ,OAAO,CAACL,UAAU,EAAE,CAACO,KAAK,EAAEC,MAAM,KAAK;IACpC,MAAME,QAAQ,GAAG,CAAC,GAAGH,KAAK,CAACL,KAAK,CAAC;IACjC,MAAMS,OAAO,GAAG;MACZC,IAAI,EAAEJ,MAAM,CAACC,OAAO,CAACG,IAAI;MACzBC,UAAU,EAAEL,MAAM,CAACC,OAAO,CAACI,UAAU;MACrCC,MAAM,EAAEN,MAAM,CAACC,OAAO,CAACK,MAAM;MAC7BC,GAAG,EAAEP,MAAM,CAACC,OAAO,CAACM,GAAG;MACvBC,aAAa,EAAER,MAAM,CAACC,OAAO,CAACO,aAAa;MAC3CC,OAAO,EAAET,MAAM,CAACC,OAAO,CAACQ,OAAO;MAC/BC,IAAI,EAAEV,MAAM,CAACC,OAAO,CAACS,IAAI;MACzBC,KAAK,EAAEX,MAAM,CAACC,OAAO,CAACU,KAAK;MAC3BC,KAAK,EAAEZ,MAAM,CAACC,OAAO,CAACW;IAC1B,CAAC;IAEDV,QAAQ,CAACW,IAAI,CAACV,OAAO,CAAC;IACtB,OAAO;MACH,GAAGJ,KAAK;MACRL,KAAK,EAAEQ;IACX,CAAC;EACL,CAAC,CAAC,CACDL,OAAO,CAACN,UAAU,EAAE,CAACQ,KAAK,EAAEC,MAAM,KAAK;IACpC,MAAMc,SAAS,GAAGf,KAAK,CAACL,KAAK,CAACqB,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAKjB,MAAM,CAACC,OAAO,CAACgB,GAAG,CAAC;IAC1E,MAAMf,QAAQ,GAAG;MAAC,GAAGH,KAAK,CAACL,KAAK,CAACoB,SAAS;IAAC,CAAC;IAC5C,MAAMI,cAAc,GAAG,CAAC,GAAGnB,KAAK,CAACL,KAAK,CAAC;IACvCwB,cAAc,CAACJ,SAAS,CAAC,GAAGZ,QAAQ;IAEpC,OAAM;MACF,GAAGH,KAAK;MACRL,KAAK,EAAEwB;IACX,CAAC;EACL,CAAC,CAAC;AACN,CAAC,CAAC;AAEF,eAAevB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}