{"ast":null,"code":"import { createAction, createReducer, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"../axiosURL.js\";\nexport const loadFoods = createAsyncThunk(\"fitness/loadFoods\", async () => {\n  const res = axios.get(\"fitenss/food\", {\n    withCredential: true\n  });\n  return res.data;\n});\nconst initialState = {\n  foods: []\n};\nconst foodReducer = createReducer(initialState, builder => {\n  builder.addCase(loadFoods.fullfilled, (state, action) => {\n    return {\n      ...state,\n      foods: action.payload\n    };\n  });\n});\nexport default foodReducer;","map":{"version":3,"names":["createAction","createReducer","createAsyncThunk","axios","loadFoods","res","get","withCredential","data","initialState","foods","foodReducer","builder","addCase","fullfilled","state","action","payload"],"sources":["/home/brezerda/Projects/Repos/fitness_app/src/Reducer/foodReducer.js"],"sourcesContent":["import {createAction, createReducer, createAsyncThunk} from \"@reduxjs/toolkit\";\nimport axios from \"../axiosURL.js\";\n\nexport const loadFoods = createAsyncThunk(\"fitness/loadFoods\", async () => {\n    const res = axios.get(\"fitenss/food\", {withCredential: true})\n    return res.data\n});\n\nconst initialState = {\n    foods: []\n};\n\nconst foodReducer = createReducer(initialState, (builder) => {\n    builder.addCase(loadFoods.fullfilled, (state, action) => {\n        return{\n            ...state,\n            foods: action.payload\n        }\n    })\n});\n\nexport default foodReducer;"],"mappings":"AAAA,SAAQA,YAAY,EAAEC,aAAa,EAAEC,gBAAgB,QAAO,kBAAkB;AAC9E,OAAOC,KAAK,MAAM,gBAAgB;AAElC,OAAO,MAAMC,SAAS,GAAGF,gBAAgB,CAAC,mBAAmB,EAAE,YAAY;EACvE,MAAMG,GAAG,GAAGF,KAAK,CAACG,GAAG,CAAC,cAAc,EAAE;IAACC,cAAc,EAAE;EAAI,CAAC,CAAC;EAC7D,OAAOF,GAAG,CAACG,IAAI;AACnB,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,WAAW,GAAGV,aAAa,CAACQ,YAAY,EAAGG,OAAO,IAAK;EACzDA,OAAO,CAACC,OAAO,CAACT,SAAS,CAACU,UAAU,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;IACrD,OAAM;MACF,GAAGD,KAAK;MACRL,KAAK,EAAEM,MAAM,CAACC;IAClB,CAAC;EACL,CAAC,CAAC;AACN,CAAC,CAAC;AAEF,eAAeN,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}