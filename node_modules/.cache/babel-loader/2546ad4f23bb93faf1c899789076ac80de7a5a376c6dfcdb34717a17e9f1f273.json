{"ast":null,"code":"import { createAction, createReducer, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"../axiosURL.js\";\nexport const loadDays = createAsyncThunk(\"fitness/loadDays\", async data => {\n  const res = await axios.get(`/fitness/day/${data.profileId}/${data.date}`, {\n    withCredentials: true\n  });\n  console.log(res.data);\n  return res.data;\n});\nexport const updateDay = createAction(\"fitness/updateDay\");\nexport const createDay = createAction(\"fitness/createDay\");\nconst initialState = {\n  day: []\n};\nconst dayReducer = createReducer(initialState, builder => {\n  builder.addCase(loadDays.fulfilled, (state, action) => {\n    return {\n      ...state,\n      day: action.payload\n    };\n  }).addCase(createDay, (state, action) => {\n    const dayCopy = [...state.day];\n    const newDay = {\n      date: action.payload.date,\n      food: [{\n        foodId: action.payload.foodId,\n        amount: action.payload.amount\n      }],\n      exercise: [{\n        exerciseId: action.payload.exerciseId,\n        timeInMinutes: action.payload.timeInMinutes\n      }],\n      profileId: action.payload.profileId\n    };\n    dayCopy.push(newDay);\n    return {\n      ...state,\n      day: dayCopy\n    };\n  }).addCase(updateDay, (state, action) => {\n    const dayIndex = state.day.findIndex(t => t._id === action.payload.dayId);\n    const dayCopy = {\n      ...state.day[dayIndex]\n    };\n    const {\n      dayId,\n      ...rest\n    } = action.payload;\n    Object.assign(dayCopy, rest);\n    const dayArrayCopy = [...state.day];\n    dayArrayCopy[dayIndex] = dayCopy;\n    return {\n      ...state,\n      day: dayArrayCopy\n    };\n  });\n});\nexport default dayReducer;","map":{"version":3,"names":["createAction","createReducer","createAsyncThunk","axios","loadDays","data","res","get","profileId","date","withCredentials","console","log","updateDay","createDay","initialState","day","dayReducer","builder","addCase","fulfilled","state","action","payload","dayCopy","newDay","food","foodId","amount","exercise","exerciseId","timeInMinutes","push","dayIndex","findIndex","t","_id","dayId","rest","Object","assign","dayArrayCopy"],"sources":["/home/brezerda/Projects/Repos/fitness_app/src/Reducer/day.reducer.js"],"sourcesContent":["import {createAction, createReducer, createAsyncThunk} from \"@reduxjs/toolkit\";\nimport axios from \"../axiosURL.js\";\n\nexport const loadDays = createAsyncThunk(\"fitness/loadDays\", async (data) => {\n    const res = await axios.get(`/fitness/day/${data.profileId}/${data.date}`, {withCredentials: true})\n    console.log(res.data)\n    return res.data\n});\n\nexport const updateDay = createAction(\"fitness/updateDay\")\nexport const createDay = createAction(\"fitness/createDay\")\n\nconst initialState = {\n    day: []\n};\n\nconst dayReducer = createReducer(initialState, (builder) => {\n    builder.addCase(loadDays.fulfilled, (state, action) => {\n        return{\n            ...state,\n            day: action.payload\n        }\n    })\n    .addCase(createDay, (state, action) => {\n    const dayCopy = [...state.day];\n    \n    const newDay = {\n        date: action.payload.date, \n        food: [\n            {\n                foodId: action.payload.foodId,\n                amount: action.payload.amount\n            }\n        ],\n        exercise: [\n            {\n                exerciseId: action.payload.exerciseId,\n                timeInMinutes: action.payload.timeInMinutes\n            }\n        ],\n        profileId: action.payload.profileId \n    };\n\n    dayCopy.push(newDay);\n\n    return {\n        ...state,\n        day: dayCopy\n    };\n    })\n    .addCase(updateDay, (state, action) => {\n        const dayIndex = state.day.findIndex(t => t._id === action.payload.dayId)\n        const dayCopy = {...state.day[dayIndex]}\n        const { dayId, ...rest } = action.payload;\n        Object.assign(dayCopy, rest);\n        const dayArrayCopy = [...state.day]\n        dayArrayCopy[dayIndex] = dayCopy\n        return{\n            ...state,\n            day: dayArrayCopy \n        }\n    })\n});\n\nexport default dayReducer;"],"mappings":"AAAA,SAAQA,YAAY,EAAEC,aAAa,EAAEC,gBAAgB,QAAO,kBAAkB;AAC9E,OAAOC,KAAK,MAAM,gBAAgB;AAElC,OAAO,MAAMC,QAAQ,GAAGF,gBAAgB,CAAC,kBAAkB,EAAE,MAAOG,IAAI,IAAK;EACzE,MAAMC,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,gBAAeF,IAAI,CAACG,SAAU,IAAGH,IAAI,CAACI,IAAK,EAAC,EAAE;IAACC,eAAe,EAAE;EAAI,CAAC,CAAC;EACnGC,OAAO,CAACC,GAAG,CAACN,GAAG,CAACD,IAAI,CAAC;EACrB,OAAOC,GAAG,CAACD,IAAI;AACnB,CAAC,CAAC;AAEF,OAAO,MAAMQ,SAAS,GAAGb,YAAY,CAAC,mBAAmB,CAAC;AAC1D,OAAO,MAAMc,SAAS,GAAGd,YAAY,CAAC,mBAAmB,CAAC;AAE1D,MAAMe,YAAY,GAAG;EACjBC,GAAG,EAAE;AACT,CAAC;AAED,MAAMC,UAAU,GAAGhB,aAAa,CAACc,YAAY,EAAGG,OAAO,IAAK;EACxDA,OAAO,CAACC,OAAO,CAACf,QAAQ,CAACgB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;IACnD,OAAM;MACF,GAAGD,KAAK;MACRL,GAAG,EAAEM,MAAM,CAACC;IAChB,CAAC;EACL,CAAC,CAAC,CACDJ,OAAO,CAACL,SAAS,EAAE,CAACO,KAAK,EAAEC,MAAM,KAAK;IACvC,MAAME,OAAO,GAAG,CAAC,GAAGH,KAAK,CAACL,GAAG,CAAC;IAE9B,MAAMS,MAAM,GAAG;MACXhB,IAAI,EAAEa,MAAM,CAACC,OAAO,CAACd,IAAI;MACzBiB,IAAI,EAAE,CACF;QACIC,MAAM,EAAEL,MAAM,CAACC,OAAO,CAACI,MAAM;QAC7BC,MAAM,EAAEN,MAAM,CAACC,OAAO,CAACK;MAC3B,CAAC,CACJ;MACDC,QAAQ,EAAE,CACN;QACIC,UAAU,EAAER,MAAM,CAACC,OAAO,CAACO,UAAU;QACrCC,aAAa,EAAET,MAAM,CAACC,OAAO,CAACQ;MAClC,CAAC,CACJ;MACDvB,SAAS,EAAEc,MAAM,CAACC,OAAO,CAACf;IAC9B,CAAC;IAEDgB,OAAO,CAACQ,IAAI,CAACP,MAAM,CAAC;IAEpB,OAAO;MACH,GAAGJ,KAAK;MACRL,GAAG,EAAEQ;IACT,CAAC;EACD,CAAC,CAAC,CACDL,OAAO,CAACN,SAAS,EAAE,CAACQ,KAAK,EAAEC,MAAM,KAAK;IACnC,MAAMW,QAAQ,GAAGZ,KAAK,CAACL,GAAG,CAACkB,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAKd,MAAM,CAACC,OAAO,CAACc,KAAK,CAAC;IACzE,MAAMb,OAAO,GAAG;MAAC,GAAGH,KAAK,CAACL,GAAG,CAACiB,QAAQ;IAAC,CAAC;IACxC,MAAM;MAAEI,KAAK;MAAE,GAAGC;IAAK,CAAC,GAAGhB,MAAM,CAACC,OAAO;IACzCgB,MAAM,CAACC,MAAM,CAAChB,OAAO,EAAEc,IAAI,CAAC;IAC5B,MAAMG,YAAY,GAAG,CAAC,GAAGpB,KAAK,CAACL,GAAG,CAAC;IACnCyB,YAAY,CAACR,QAAQ,CAAC,GAAGT,OAAO;IAChC,OAAM;MACF,GAAGH,KAAK;MACRL,GAAG,EAAEyB;IACT,CAAC;EACL,CAAC,CAAC;AACN,CAAC,CAAC;AAEF,eAAexB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}