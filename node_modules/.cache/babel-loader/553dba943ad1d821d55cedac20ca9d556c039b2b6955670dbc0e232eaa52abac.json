{"ast":null,"code":"var _jsxFileName = \"/home/brezerda/Projects/Repos/fitness_app/src/CaloriesOverview/caloriesOverview.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CaloriesOverview = ({\n  date,\n  profile\n}) => {\n  _s();\n  const isTabletOrMobile = useMediaQuery({\n    query: '(max-width: 1224px'\n  });\n  const [burnedCalories, setBurnedCalories] = useState(1000);\n  const [takenCalories, setTakenCalories] = useState(500);\n  const [dayData, setDayDate] = useState('');\n  useEffect(() => {\n    getDayData(date, profile);\n  }, []);\n  const getDayData = (date, profile) => {\n    // Assuming your mock data is stored in the public folder\n    fetch(\"/mocks/dayData.json\").then(response => response.json()).then(data => {\n      let day = data.find(day => day.profileId === profile);\n      setDayDate(day);\n    }).catch(error => {\n      console.error(\"Error fetching day data:\", error);\n    });\n  };\n  console.log(dayData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isTabletOrMobile ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Verbrannte Kalorien\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Konsumierte Kalorien\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Kaloriendefizit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Verbrannte Kalorien\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Konsumierte Kalorien\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Kaloriendefizit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(CaloriesOverview, \"Z9m2R7AY8N8dYJGLkOfiDPHFIqk=\", false, function () {\n  return [useMediaQuery];\n});\n_c = CaloriesOverview;\nexport default CaloriesOverview;\nvar _c;\n$RefreshReg$(_c, \"CaloriesOverview\");","map":{"version":3,"names":["axios","React","useEffect","useState","useMediaQuery","jsxDEV","_jsxDEV","CaloriesOverview","date","profile","_s","isTabletOrMobile","query","burnedCalories","setBurnedCalories","takenCalories","setTakenCalories","dayData","setDayDate","getDayData","fetch","then","response","json","data","day","find","profileId","catch","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/brezerda/Projects/Repos/fitness_app/src/CaloriesOverview/caloriesOverview.js"],"sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\n\nconst CaloriesOverview = ({date, profile}) => {\n    const isTabletOrMobile = useMediaQuery({ query : '(max-width: 1224px' })\n\n    const [burnedCalories, setBurnedCalories] = useState(1000)\n    const [takenCalories, setTakenCalories] = useState(500)\n    const [dayData, setDayDate] = useState('')\n\n\n    useEffect(() => {\n        getDayData(date, profile)\n    }, [])\n\nconst getDayData = (date, profile) => {\n    // Assuming your mock data is stored in the public folder\n    fetch(\"/mocks/dayData.json\")\n        .then((response) => response.json())\n        .then((data) => {\n            let day = data.find((day) => day.profileId === profile);\n            setDayDate(day);\n        })\n        .catch((error) => {\n            console.error(\"Error fetching day data:\", error);\n        });\n};\n\n    console.log(dayData)\n\n    return(\n        <div>\n            {isTabletOrMobile ? (\n                <div>\n                    <p>Verbrannte Kalorien</p>\n                    <p>Konsumierte Kalorien</p>\n                    <p>Kaloriendefizit</p>\n                </div>\n            ) : (\n                <div>\n                    <p>Verbrannte Kalorien</p>\n                    <p>Konsumierte Kalorien</p>\n                    <p>Kaloriendefizit</p>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default CaloriesOverview;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,gBAAgB,GAAGA,CAAC;EAACC,IAAI;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAMC,gBAAgB,GAAGP,aAAa,CAAC;IAAEQ,KAAK,EAAG;EAAqB,CAAC,CAAC;EAExE,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,GAAG,CAAC;EACvD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAG1CD,SAAS,CAAC,MAAM;IACZiB,UAAU,CAACX,IAAI,EAAEC,OAAO,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEV,MAAMU,UAAU,GAAGA,CAACX,IAAI,EAAEC,OAAO,KAAK;IAClC;IACAW,KAAK,CAAC,qBAAqB,CAAC,CACvBC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACZ,IAAIC,GAAG,GAAGD,IAAI,CAACE,IAAI,CAAED,GAAG,IAAKA,GAAG,CAACE,SAAS,KAAKlB,OAAO,CAAC;MACvDS,UAAU,CAACO,GAAG,CAAC;IACnB,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD,CAAC,CAAC;EACV,CAAC;EAEGC,OAAO,CAACC,GAAG,CAACd,OAAO,CAAC;EAEpB,oBACIX,OAAA;IAAA0B,QAAA,EACKrB,gBAAgB,gBACbL,OAAA;MAAA0B,QAAA,gBACI1B,OAAA;QAAA0B,QAAA,EAAG;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC1B9B,OAAA;QAAA0B,QAAA,EAAG;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC3B9B,OAAA;QAAA0B,QAAA,EAAG;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,gBAEN9B,OAAA;MAAA0B,QAAA,gBACI1B,OAAA;QAAA0B,QAAA,EAAG;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC1B9B,OAAA;QAAA0B,QAAA,EAAG;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC3B9B,OAAA;QAAA0B,QAAA,EAAG;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB;EACR;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAA1B,EAAA,CA5CKH,gBAAgB;EAAA,QACOH,aAAa;AAAA;AAAAiC,EAAA,GADpC9B,gBAAgB;AA8CtB,eAAeA,gBAAgB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}